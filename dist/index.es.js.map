{"version":3,"file":"index.es.js","sources":["../src/components/Accordion/Accordion.tsx","../src/components/Accordion/AccordionItem.tsx","../src/components/Alert/Alert.tsx","../src/components/Badge/Badge.tsx","../src/components/Link/Link.tsx","../src/components/Breadcrumb/Breadcrumb.tsx","../src/components/Button/Button.tsx","../src/components/CardCompactV/CardCompactV.tsx","../src/components/Chips/ChipsItem/ChipsItem.tsx","../src/components/Chips/ChipsList/ChipsList.tsx","../src/components/Hero/Hero.tsx","../src/components/Icon/Icon.tsx","../src/components/Play/Play.tsx","../src/components/SidePanel/SidePanel.tsx","../src/components/SidePanel/SidePanelHeader.tsx","../src/components/SidePanel/SidePanelContent.tsx","../src/components/SidePanel/SidePanelFooter.tsx","../src/components/Typography/Typography.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\n\nexport type AccordionProps = {\n    children?: ReactNode;\n}\n\n\nconst Accordion = ({\n    children\n}:AccordionProps) => {\n    return (\n        <div className=\"mds-accordion--standalone\">\n            {children}\n        </div>\n    )\n}\n\nexport default Accordion;","import React, { ReactNode, useRef, useEffect } from \"react\";\n\nexport type AccordionItemProps = {\n    id?: string;\n    title?: string;\n    children?: ReactNode;\n    defaultExpanded?: boolean;\n    expanded?: boolean;\n    onChange?: any;\n    expandIcon?: string; //don't usable currently because icon is also injected by CSS. Bug declared on dec. 8th.\n}\n\nconst AccordionItem = ({\n    id,\n    title = \"Item title\",\n    children,\n    defaultExpanded = false,\n    onChange,\n    expanded = defaultExpanded,\n    expandIcon = 'expand-more'\n}:AccordionItemProps) => {\n    const [maxH, setMaxH] = React.useState(0);\n    \n    const [isExpanded, setIsExpanded] = React.useState(expanded);\n    \n    const ref = useRef(null) as any;\n\n    const getContentHeight = () => {\n        if (ref && ref.current) {\n            return ref.current.querySelector('.mds-accordion__body').offsetHeight;\n        } else {\n            return 0\n        }\n    }\n\n    const onClickHandler = () => {\n        setIsExpanded(!isExpanded);\n\n        if (onChange && id) {\n            onChange(id);\n        }\n    }\n\n    useEffect(() => {\n        if (isExpanded) {\n            setMaxH(getContentHeight());\n        } else {\n            setMaxH(0);\n        }\n\n        return () => {}\n    }, [isExpanded]);\n\n\n    useEffect(() => {\n        setIsExpanded(expanded);\n        return () => {}\n    }, [expanded])\n\n    return (\n        <div ref={ref} id={id} className=\"mds-accordion__item\">\n            <h2 className=\"mds-accordion__header\">\n                <button type=\"button\" aria-controls=\"collapse--xx\" onClick={onClickHandler} className={`mds-collapse mds-collapse__label ${isExpanded ? 'active' : ''}`} aria-expanded={isExpanded}>\n                    {title}\n                    <span className={`mds-icon__${expandIcon}`} aria-hidden=\"true\"></span>\n                </button>\n            </h2>\n            <div id=\"collapse--xx\" className={`mds-collapse__content ${isExpanded ? 'active' : ''}`} style={{'maxHeight': maxH}}>\n                <div className=\"mds-accordion__body\">\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AccordionItem;","import React, {ReactNode} from \"react\";\n\n\ntype AlertProps = {\n    children?: ReactNode;\n    severity?: \"info\" | \"success\" | \"warning\" | \"danger\";\n    title?: string;\n    icon?: string;\n    onClose?: any;\n}\n\nexport default function Alert({\n    children,\n    severity = \"info\",\n    title,\n    icon = \"info\",\n    onClose\n}:AlertProps){\n    return (\n        <div className={`mds-alert mds-alert--basic mds-alert-type--${severity} mds-border-4--color-white`}>\n            <div className=\"mds-alert__header\">\n                <span className={`mds-icon mds-icon__${icon}`} aria-hidden=\"true\"></span>\n                { title ? (\n                    <h2 className=\"mds-sr-only\">{title}</h2>\n                ):( null )}\n            </div> \n            { onClose && \n                <button className=\"mds-close\" onClick={onClose}>\n                    <span className=\"mds-icon__close\" aria-hidden=\"true\"></span>\n                    <span className=\"mds-sr-only\">Fermer l'alerte</span>\n                </button>\n            }\n            \n            <div className=\"mds-alert__content\">\n                <p>{children}</p>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\n\nexport type BadgeProps = {\n    label?: string;\n    size?: \"small\" | \"big\";\n    severity?: \"neutral\" | \"success\" | \"warning\" | \"danger\" | \"new\";\n    color?: string; // override severity color\n    icon?: string;\n}\n\n\nexport default function Badge ({\n    label,\n    size = \"small\",\n    severity = \"neutral\",\n    icon,\n    color,\n}: BadgeProps) {\n\n    const colorClass = (color) ? `mds-background-color__${color}` : \"\";\n\n    return  (\n        <p className={`mds-badge mds-badge--${size} mds-badge--${severity} ${colorClass}`}>\n            {icon &&\n                <span className={`mds-icon__${icon}`} aria-hidden=\"true\"></span>\n            }\n            <span>{label}</span>\n        </p>\n    )\n}","import React, { HTMLProps } from \"react\";\n\nconst variantMappingClass = {\n    body1: 'mds-text--1',\n    body2: 'mds-text--2',\n    body3: 'mds-text--3',\n    body4: 'mds-text--4',\n}\n\nexport const LinkColorMappingClass = {\n    link   : \"color-use--9\",\n    primary: \"color-macif--1\",\n    text   : \"color-grey--80\",\n}\n\nexport interface LinkProps extends HTMLProps<HTMLAnchorElement> {\n    children? : string;\n    variant? : \"body1\" | \"body2\" | \"body3\" | \"body4\";\n    underline?: boolean;\n    reverse?: boolean;\n    startIcon?: string;\n    endIcon?: string;\n    color?: \"link\" | \"primary\" | \"text\";\n}\n\nconst Link = ({\n    children,\n    variant = 'body2',\n    underline = true,\n    reverse = false,\n    startIcon,\n    endIcon,\n    color = \"link\",\n    ...props\n}:LinkProps) => {\n    const classBuilder = `mds-link ${variantMappingClass[variant]} ${!underline ? \"mds-link--standalone\" : \"\"} ${reverse ? \"mds-link--reverse\" : \"mds-color__\"+LinkColorMappingClass[color] }`;\n\n    return (\n        <a className={classBuilder} {...props}>\n            {startIcon &&\n                <span className={`mds-icon__${startIcon}--right`} aria-hidden=\"true\"></span>\n            }\n            {children}\n            {endIcon &&\n                <span className={`mds-icon__${endIcon}--right`} aria-hidden=\"true\"></span>\n            }\n        </a>\n    )\n}\n\nexport default Link;","import React, {Children, ReactNode} from \"react\";\nimport { LinkColorMappingClass } from \"../Link/Link\";\n\nexport type BreadcrumbProps = {\n    children?: ReactNode;\n    color?: \"link\" | \"primary\" | \"text\";\n    reverse?: boolean;\n}\n\nconst Breadcrumb = ({\n    children,\n    color = \"link\",\n    reverse = false,\n}:BreadcrumbProps) => {\n    const colorClass = (reverse) ? \"color-white\" : LinkColorMappingClass[color];\n    return (\n        <nav className=\"mds-breadcrumbs\" role=\"navigation\" aria-labelledby=\"xx\">\n            <ul>\n                {Children.map(children, child => {\n                    return (<li className={`mds-color__${colorClass}`}>{child}</li>)\n                })}\n            </ul>\n        </nav>\n    )\n}\n\nexport default Breadcrumb;","import React, { ReactNode } from 'react';\n\n   \nexport interface ButtonProps extends React.ComponentPropsWithoutRef<\"button\"> {\n    component?: string;\n    children?: ReactNode;\n    color?: 'default' | 'conversion' | 'alert';\n    disabled?: boolean;\n    endIcon?: string;\n    size?: \"small\" | \"medium\";\n    fullWidth?: boolean;\n    href?: string;\n    reverse?: boolean;\n    startIcon?: string;\n    target?: string;\n    variant?: \"primary\" | \"secondary\" | \"tertiary\";\n}\n\nexport default function Button({\n    component,\n    children, \n    color,\n    variant = \"primary\",\n    size = \"medium\",\n    fullWidth = false,\n    startIcon,\n    endIcon,\n    disabled = false,\n    reverse = false,\n    href,\n    target,\n    \n    ...buttonProps\n}: ButtonProps){\n\n    const tagComponent = component || \"button\";\n    const Tag = tagComponent as \"a\" | \"div\";\n\n    const fullWidthClass = (fullWidth) ? \"mds-full-width\" : \"\";\n    const reverseClass = (reverse) ? \"mds-btn--reverse\" : \"\";\n    \n    if (variant == 'primary' && color == 'conversion') {\n        variant += \"-cta\";\n    } else if (variant == 'secondary' && color == 'alert') {\n        variant += \"-alert\";\n    }\n\n\n    let opts : any = {};\n        \n    if (Tag == \"a\") {\n        opts['role'] = \"button\";\n        opts['href'] = href;\n        opts['target'] = (target ? target : \"_self\");\n        opts['tabindex'] = \"0\";\n    } else if (Tag == \"div\") {\n        opts['role'] = \"button\";\n        opts['tabindex'] = \"0\";\n    } else {\n        opts = {...buttonProps, opts}; //if Tag == button : merge buttonProps\n    }\n    \n    if (disabled) {\n        if (Tag == \"a\" || Tag == \"div\"){\n            opts['aria-disabled'] = 'true';\n        }else{\n            opts['disabled'] = 'disabled';\n        }\n    }\n\n    return (\n        <Tag {...opts} \n            className={`mds-btn mds-btn--${variant} mds-btn--${size} ${fullWidthClass} ${reverseClass}`}>\n            \n            {startIcon ? (\n                <span className={`mds-icon__${startIcon}--left`} aria-hidden=\"true\"></span>\n            ) : (null)}\n            {children}\n            \n            {endIcon ? (\n                <span className={`mds-icon__${endIcon}--right`} aria-hidden=\"true\"></span>\n            ) : (null)}\n        </Tag>\n    )\n}","import React from 'react';\n\n\nexport type CardProps = {\n    title?: string;\n    icon?: string;\n    href?: string;\n    target?: string;\n    role?: string;\n}\n\nexport default function CardCompactV({\n    title = \"title\",\n    icon = \"auto\",\n    href = \"#\",\n    target = \"_self\",\n    role,\n}: CardProps){\n\n    return (\n        <div className=\"mds-card mds-card--compact-v\" role={role}>\n            <span className=\"mds-icon__arrow-forward\" aria-hidden=\"true\"></span>\n            <div className=\"mds-card__content\">\n                <p className=\"mds-card__title\">\n                    <a href={href} className=\"mds-card__link\" target={target}>{title}</a>\n                </p>\n            </div>\n            <span className={`mds-icon mds-picto__${icon}`} aria-hidden=\"true\"></span>\n        </div>\n    )\n}","import React from \"react\";\n\n\nexport type ChipsItemProps = {\n    label?: string;\n    active?: boolean;\n    onClick?: any\n}\n\nexport default function ChipsItem({\n    label,\n    active = false,\n    onClick\n}:ChipsItemProps) {\n    return (\n        <li>\n            <button onClick={onClick} type=\"button\" className=\"mds-chips__item\" aria-pressed={`${active}`} aria-disabled={`${active}`}>{label}</button>\n        </li>\n    )\n}","import React, { ReactNode } from \"react\"\n\ntype ChipsListProps = {\n    children?: ReactNode;\n    reverse?: boolean;\n    size?: \"small\" | \"big\";\n}\n\n\nexport default function ChipsList ({\n    children,\n    reverse = false,\n    size = \"big\"\n}:ChipsListProps) {\n    \n    return (\n        <div className={`mds-chips ${size == 'small' ? \"mds-chips--small\" : \"\"} ${reverse == true ? \"mds-chips--reverse\" : \"\"}`}>\n            <ul className=\"mds-chips__list\">\n                {children}\n            </ul>\n        </div>\n    )\n}","import React, { ReactNode } from \"react\";\n\nexport type HeroProps = {\n    upTitle?: ReactNode;\n    title: ReactNode;\n    subTitle?: ReactNode;\n    heroActions?: ReactNode;\n    image?: string;\n}\n\n\nconst Hero = ({\n    upTitle,\n    title = \"Title\",\n    subTitle = \"Content\",\n    heroActions,\n    image\n}:HeroProps) => {\n\n    \n    return (\n        <div className=\"mds-hero mds-hero--action\">\n            <div className=\"mds-hero__body\">\n                {title}\n                {upTitle &&\n                    <div className=\"mds-supertitle\">\n                        {upTitle}\n                    </div>\n                }\n                { subTitle && \n                    <p className=\"mds-lead\">\n                        {subTitle}\n                    </p>\n                }\n                {heroActions && \n                    <div style={{order: 3}}>\n                        {heroActions}\n                    </div>\n                }\n            </div>\n            <div className=\"mds-hero__img\">\n                <img src={`${image}`} alt=\"\"/>\n            </div>\n        </div>\n    )\n};\n\nexport default Hero;","import React, { ReactNode } from \"react\";\n\nconst iconSizeMappingClass = {\n    'xsmall'   : 16,\n    'small'    : 24,\n    'medium'   : 28,\n    'large'    : 32,\n    'xlarge'   : 40,\n    'huge'     : 40,\n    'enormous' : 40,\n    'giant'    : 40,\n};\nconst pictoSizeMappingClass = {\n    'xsmall'   : 24,\n    'small'    : 32,\n    'medium'   : 40,\n    'large'    : 48,\n    'xlarge'   : 64,\n    'huge'     : 80,\n    'enormous' : 96,\n    'giant'    : 160,\n};\n\n\nexport type IconProps = {\n    children?: ReactNode;\n    color?: string;\n    size?: 'xsmall' | 'small' | 'medium'| 'large' | 'xlarge' | 'huge' | 'enormous' | 'giant' ;\n    baseClassName?: string;\n}\n\nconst Icon = ({\n    children = \"person\",\n    color,\n    size = 'medium',\n    baseClassName = \"icon\"\n}:IconProps) => {\n    const baseClass = \"mds-\" + baseClassName + \"__\";\n    const sizeClass = (baseClassName == 'picto') ? \"mds-picto--\"+pictoSizeMappingClass[size] : \"mds-icon--\"+iconSizeMappingClass[size];\n    return (\n        <span className={` ${baseClass}${children} ${sizeClass} ${color ?  \"mds-color__\"+color : ''} `}></span>\n    )\n}\n\nexport default Icon;","import React from \"react\";\n\n\nconst Play = ({}) => {\n    return (\n        <p>\n            Play\n        </p>\n    )\n}\n\nexport default Play;","/**\n * Because title is not required in ths version, aria-labeledby is not set\n * That's because aria-labeledby reference the title id ... and title id is not required CQFD\n * aria-labelledby=\"xxx\"\n */\nimport React, { ReactNode, useEffect, useRef } from \"react\";\n\nexport type SidePanelProps = {\n    children?: ReactNode;\n    open?: boolean;\n    onClose?: any;\n    size?: 'small' | 'medium' | 'large';\n    showCloseButton?: boolean;\n};\n\nconst sizeMappingClass = {\n    'small' : 'small',\n    'medium': 'medium',\n    'large' : 'big'\n}\n\n\nconst SidePanel = ({\n    children,\n    open = false,\n    onClose,\n    size = 'medium',\n    showCloseButton = false,\n}:SidePanelProps) => {\n    const ref = useRef(null) as any;\n\n    let $closeBtn:HTMLButtonElement;\n    \n    const closeHandler = () => {\n        if (onClose) { \n            onClose();\n        }\n    }\n\n    const escapeKeyHandler = (e:KeyboardEvent) => {\n        if (e.key === \"Escape\") {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            closeHandler();\n        }\n    }\n\n    const backdropClickHandler = (e:MouseEvent) => {\n        const el:any = e.target;\n        if(el.classList.contains('mds-dialog')){\n            closeHandler();\n        }\n    }\n\n    useEffect(() => {    \n        // mount\n        if (showCloseButton){\n            $closeBtn = ref.current.querySelector('button.mds-close');\n            $closeBtn.addEventListener(\"click\", closeHandler);\n        }\n\n        ref.current.addEventListener('click', backdropClickHandler);\n        \n        return () => {\n            // unmount\n            if (showCloseButton){\n                $closeBtn.removeEventListener(\"click\", closeHandler);\n            }\n\n            ref.current.removeEventListener('click', backdropClickHandler);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (open === true) {\n            document.addEventListener('keydown', escapeKeyHandler);\n            ref.current.showModal();\n        } else {\n            ref.current.close();\n        }\n\n        return () => {\n            document.removeEventListener('keydown', escapeKeyHandler);\n        }\n    }, [open]);\n\n    return (\n        <dialog ref={ref} role=\"dialog\" id=\"mds-modal\" className=\"mds-dialog\" aria-modal=\"true\">\n            <div className={`mds-modal mds-modal--side-panel mds-modal--${ sizeMappingClass[size]}`} role=\"document\">\n                \n                {showCloseButton && \n                    <button className=\"mds-close\">\n                        <span className=\"mds-icon__close\" aria-hidden=\"true\"></span>\n                        <span className=\"mds-sr-only\">Fermer la fenêtre de la modale</span>\n                    </button>\n                }\n\n                <div className=\"mds-modal__container\">\n                    {children}\n                </div>\n            </div>\n        </dialog>\n    )\n}\n\nexport default SidePanel;","import React from \"react\";\n\nexport type SidePanelHeaderProps = {\n    title? : string;\n    icon?: string;\n}\n\nconst SidePanelHeader = ({\n    title,\n    icon\n}:SidePanelHeaderProps) => {\n    return (\n        <>\n            <div className=\"mds-modal__header\">\n                {icon && \n                    <span aria-hidden=\"true\" className={`mds-icon__${icon}--left`}></span>\n                }\n                <h1 className=\"mds-modal__title\">{title}</h1>\n            </div>\n            <hr className=\"mds-divider mds-divider--small\" />\n        </>\n    )\n}\n\nexport default SidePanelHeader;","import React, { ReactNode } from \"react\";\n\nexport type SidePanelContentProps = {\n    children?: ReactNode;\n}\n\nconst SidePanelContent = ({\n    children\n}:SidePanelContentProps) => {\n    return (\n        <div className=\"mds-modal__content\">\n            {children}\n        </div>\n    )\n}\n\nexport default SidePanelContent;","import React, { ReactNode } from \"react\";\n\nexport type SidePanelFooterProps = {\n    children? : ReactNode;\n}\n\nconst SidePanelFooter = ({\n    children\n}:SidePanelFooterProps) => {\n    return (\n        <div className=\"mds-modal__footer\">\n            {children}\n        </div>\n    )\n}\n\nexport default SidePanelFooter;","import React, { HTMLAttributes, ReactNode } from \"react\"\n\nconst variantMappingClass = {\n    h1: 'mds-h1',\n    h2: 'mds-h2',\n    h3: 'mds-h3',\n    h4: 'mds-h4',\n    h5: 'mds-h5',\n    h6: 'mds-h6',\n    body1: 'mds-text--1',\n    body2: 'mds-text--2',\n    body3: 'mds-text--3',\n    body4: 'mds-text--4',\n    underline: 'mds-underline',\n  };\n\n  const variantMappingTag = {\n    h1: 'h1',\n    h2: 'h2',\n    h3: 'h3',\n    h4: 'h4',\n    h5: 'h5',\n    h6: 'h6',\n    body1: 'p',\n    body2: 'p',\n    body3: 'p',\n    body4: 'p',\n    underline: 'span',\n  }\n\nexport interface typographyProps extends HTMLAttributes<HTMLElement> {\n    children?: ReactNode;\n    variant? : \"body1\" | \"body2\" | \"body3\" | \"body4\" | \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"underline\" ;\n    component?: string;\n    align?: \"center\" | \"inherit\" | \"justify\" | \"left\" | \"right\";\n    underlineColor?: string;\n    framed?: boolean;\n}\n\nexport default function Typography({\n    children, \n    variant = \"body1\",\n    component,\n    align = \"left\",\n    underlineColor = '',\n    framed = false,\n    ...props\n}:typographyProps) {\n   \n    const tagComponent = component || variantMappingTag[variant];\n    const Tag = tagComponent as \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"p\" | \"div\" | \"span\";\n    const variantClass = (variant == \"underline\" && underlineColor) ? variantMappingClass[variant] + '--' + underlineColor : variantMappingClass[variant];\n\n    return (\n        <Tag className={`${variantClass} ${framed ? \"mds-framed\" : \"\"}`} style={{textAlign: align}} {...props}>\n            {framed ? (\n                <span>{children}</span>\n            ):(\n                children\n            )}\n        </Tag>\n    )\n}"],"names":["Accordion","children","React","AccordionItem","id","title","defaultExpanded","onChange","expanded","expandIcon","maxH","setMaxH","isExpanded","setIsExpanded","ref","useRef","getContentHeight","onClickHandler","useEffect","Alert","severity","icon","onClose","Badge","label","size","color","colorClass","variantMappingClass","LinkColorMappingClass","Link","variant","underline","reverse","startIcon","endIcon","props","classBuilder","Breadcrumb","Children","child","Button","component","fullWidth","disabled","href","target","buttonProps","Tag","fullWidthClass","reverseClass","opts","CardCompactV","role","ChipsItem","active","onClick","ChipsList","Hero","upTitle","subTitle","heroActions","image","iconSizeMappingClass","pictoSizeMappingClass","Icon","baseClassName","baseClass","sizeClass","Play","sizeMappingClass","SidePanel","open","showCloseButton","$closeBtn","closeHandler","escapeKeyHandler","e","backdropClickHandler","SidePanelHeader","SidePanelContent","SidePanelFooter","variantMappingTag","Typography","align","underlineColor","framed","variantClass"],"mappings":"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"}