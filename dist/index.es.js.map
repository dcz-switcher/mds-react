{"version":3,"file":"index.es.js","sources":["../src/components/Alert/Alert.tsx","../src/components/Badge/Badge.tsx","../src/components/Button/Button.tsx","../src/components/CardCompactV/CardCompactV.tsx","../src/components/Link/Link.tsx","../src/components/Play/Play.tsx","../src/components/Typography/Typography.tsx"],"sourcesContent":["import React, {ReactNode} from \"react\";\n\n\ntype AlertProps = {\n    children?: ReactNode;\n    severity?: \"info\" | \"success\" | \"warning\" | \"danger\";\n    title?: string;\n    icon?: string;\n}\n\nexport default function Alert({\n    children,\n    severity = \"info\",\n    title,\n    icon = \"info\"\n}:AlertProps){\n    return (\n        <div className={`mds-alert mds-alert--basic mds-alert-type--${severity} mds-border-4--color-white`}>\n            <div className=\"mds-alert__header\">\n                <span className={`mds-icon mds-icon__${icon}`} aria-hidden=\"true\"></span>\n                { title ? (\n                    <h2 className=\"mds-sr-only\">{title}</h2>\n                ):( null )}\n            </div> \n\n            <button className=\"mds-close\">\n                <span className=\"mds-icon__close\" aria-hidden=\"true\"></span>\n                <span className=\"mds-sr-only\">Fermer l'alerte</span>\n            </button>\n            \n            <div className=\"mds-alert__content\">\n                <p>{children}</p>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\n\nexport type BadgeProps = {\n    label?: string;\n    size?: \"small\" | \"big\";\n    severity?: \"neutral\" | \"success\" | \"warning\" | \"danger\" | \"new\";\n    color?: string; // override severity color\n    icon?: string;\n}\n\n\nexport default function Badge ({\n    label,\n    size = \"small\",\n    severity = \"neutral\",\n    icon,\n    color,\n}: BadgeProps) {\n\n    const colorClass = (color) ? `mds-background-color__${color}` : \"\";\n\n    return  (\n        <p className={`mds-badge mds-badge--${size} mds-badge--${severity} ${colorClass}`}>\n            {icon &&\n                <span className={`mds-icon__${icon}`} aria-hidden=\"true\"></span>\n            }\n            <span>{label}</span>\n        </p>\n    )\n}","import React, { ReactNode } from 'react';\n\n   \nexport interface ButtonProps extends React.ComponentPropsWithoutRef<\"button\"> {\n    component?: string;\n    children?: ReactNode;\n    variant?: \"primary\" | \"secondary\" | \"tertiary\";\n    size?: \"small\" | \"medium\";\n    fullWidth?: boolean;\n    startIcon?: string;\n    endIcon?: string;\n    disabled?: boolean;\n    reverse?: boolean;\n}\n\nexport default function Button({\n    component,\n    children, \n    variant = \"primary\",\n    size = \"medium\",\n    fullWidth = false,\n    startIcon,\n    endIcon,\n    disabled = false,\n    reverse = false,\n    ...buttonProps\n}: ButtonProps){\n\n    const tagComponent = component || \"button\";\n    const Tag = tagComponent as \"a\" | \"div\";\n\n    const fullWidthClass = (fullWidth) ? \"mds-full-width\" : \"\";\n    const reverseClass = (reverse) ? \"mds-btn--reverse\" : \"\";\n    \n    let opts : any = {};\n        \n    if (Tag == \"a\") {\n        opts['role'] = \"button\"\n        opts['href'] = \"#\"\n        opts['tabindex'] = \"0\"\n    } else if (Tag == \"div\") {\n        opts['role'] = \"button\"\n        opts['tabindex'] = \"0\"\n    } else {\n        opts = {...buttonProps, opts}; //if Tag == button : merge buttonProps\n    }\n    \n    if (disabled) {\n        if (Tag == \"a\" || Tag == \"div\"){\n            opts['aria-disabled'] = 'true';\n        }else{\n            opts['disabled'] = 'disabled';\n        }\n    }\n\n    return (\n        <Tag {...opts} \n            className={`mds-btn mds-btn--${variant} mds-btn--${size} ${fullWidthClass} ${reverseClass}`}>\n            \n            {startIcon ? (\n                <span className={`mds-icon__${startIcon}--left`} aria-hidden=\"true\"></span>\n            ) : (null)}\n            {children}\n            \n            {endIcon ? (\n                <span className={`mds-icon__${endIcon}--right`} aria-hidden=\"true\"></span>\n            ) : (null)}\n        </Tag>\n    )\n}","import React from 'react';\n\n\nexport type CardProps = {\n    title?: string;\n    icon?: string;\n    href?: string;\n    target?: string;\n}\n\nexport default function CardCompactV({\n    title = \"title\",\n    icon = \"auto\",\n    href = \"#\",\n    target = \"_self\"\n}: CardProps){\n\n    return (\n        <div className=\"mds-card mds-card--compact-v\">\n            <span className=\"mds-icon__arrow-forward\" aria-hidden=\"true\"></span>\n            <div className=\"mds-card__content\">\n                <p className=\"mds-card__title\">\n                    <a href={href} className=\"mds-card__link\" target={target}>{title}</a>\n                </p>\n            </div>\n            <span className={`mds-icon mds-picto__${icon}`} aria-hidden=\"true\"></span>\n        </div>\n    )\n}","import React from \"react\";\n\nconst variantMappingClass = {\n    body1: 'mds-text--1',\n    body2: 'mds-text--2',\n    body3: 'mds-text--3',\n    body4: 'mds-text--4',\n}\n\nexport type LinkProps = {\n    children? : string;\n    variant? : \"body1\" | \"body2\" | \"body3\" | \"body4\";\n    underline?: boolean;\n    reverse?: boolean;\n    href?: string;\n    target?: string;\n    startIcon?: string;\n    endIcon?: string;\n}\n\nconst Link = ({\n    children,\n    variant = 'body2',\n    underline = true,\n    reverse = false,\n    href = \"#\",\n    target = \"_self\",\n    startIcon,\n    endIcon,\n}:LinkProps) => {\n    const classBuilder = `mds-link ${variantMappingClass[variant]} ${!underline ? \"mds-link--standalone\" : \"\"} ${reverse ? \"mds-link--reverse\" : \"\"}`;\n\n    return (\n        <a className={classBuilder} href={href} target={target}>\n            {startIcon &&\n                <span className={`mds-icon__${startIcon}--right`} aria-hidden=\"true\"></span>\n            }\n            {children}\n            {endIcon &&\n                <span className={`mds-icon__${endIcon}--right`} aria-hidden=\"true\"></span>\n            }\n        </a>\n    )\n}\n\nexport default Link;","import React from \"react\";\n\n\nconst Play = ({}) => {\n    return (\n        <p>\n            Play\n        </p>\n    )\n}\n\nexport default Play;","import React, { ReactNode } from \"react\"\n\nconst variantMappingClass = {\n    h1: 'mds-h1',\n    h2: 'mds-h2',\n    h3: 'mds-h3',\n    h4: 'mds-h4',\n    h5: 'mds-h5',\n    h6: 'mds-h6',\n    body1: 'mds-text--1',\n    body2: 'mds-text--2',\n    body3: 'mds-text--3',\n    body4: 'mds-text--4',\n    underline: 'mds-underline',\n  };\n\n  const variantMappingTag = {\n    h1: 'h1',\n    h2: 'h2',\n    h3: 'h3',\n    h4: 'h4',\n    h5: 'h5',\n    h6: 'h6',\n    body1: 'p',\n    body2: 'p',\n    body3: 'p',\n    body4: 'p',\n    underline: 'span',\n  }\n\nexport type typographyProps = {\n    children?: ReactNode;\n    variant? : \"body1\" | \"body2\" | \"body3\" | \"body4\" | \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"underline\" ;\n    component?: string;\n    align?: \"center\" | \"inherit\" | \"justify\" | \"left\" | \"right\";\n    underlineColor?: string;\n    framed?: boolean;\n}\n\nexport default function Typography({\n    children, \n    variant = \"body1\",\n    component,\n    align = \"left\",\n    underlineColor = '',\n    framed = false\n}:typographyProps) {\n   \n    const tagComponent = component || variantMappingTag[variant];\n    const Tag = tagComponent as \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"p\" | \"div\" | \"span\";\n    const variantClass = (variant == \"underline\" && underlineColor) ? variantMappingClass[variant] + '--' + underlineColor : variantMappingClass[variant];\n\n    return (\n        <Tag className={`${variantClass} ${framed ? \"mds-framed\" : \"\"}`} style={{textAlign: align}}>\n            {framed ? (\n                <span>{children}</span>\n            ):(\n                children\n            )}\n        </Tag>\n    )\n}"],"names":["Alert","children","severity","title","icon","React","Badge","label","size","color","colorClass","Button","component","variant","fullWidth","startIcon","endIcon","disabled","reverse","buttonProps","Tag","fullWidthClass","reverseClass","opts","CardCompactV","href","target","variantMappingClass","Link","underline","classBuilder","Play","variantMappingTag","Typography","align","underlineColor","framed","variantClass"],"mappings":"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"}