{"version":3,"file":"index.cjs.js","sources":["../src/components/Accordion/Accordion.tsx","../src/components/Accordion/AccordionItem.tsx","../src/components/Alert/Alert.tsx","../src/components/Badge/Badge.tsx","../src/components/Link/Link.tsx","../src/components/Breadcrumb/Breadcrumb.tsx","../src/components/Button/Button.tsx","../src/components/CardCompactV/CardCompactV.tsx","../src/components/Chips/ChipsItem/ChipsItem.tsx","../src/components/Chips/ChipsList/ChipsList.tsx","../src/components/Divider/Divider.tsx","../src/components/Hero/Hero.tsx","../src/components/Icon/Icon.tsx","../src/components/Play/Play.tsx","../src/components/SidePanel/SidePanel.tsx","../src/components/SidePanel/SidePanelHeader.tsx","../src/components/SidePanel/SidePanelContent.tsx","../src/components/SidePanel/SidePanelFooter.tsx","../src/components/Typography/Typography.tsx","../src/components/Summary/Summary.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\n\nexport type AccordionProps = {\n    children?: ReactNode;\n}\n\n\nconst Accordion = ({\n    children\n}:AccordionProps) => {\n    return (\n        <div className=\"mds-accordion--standalone\">\n            {children}\n        </div>\n    )\n}\n\nexport default Accordion;","import React, { ReactNode, useRef, useEffect } from \"react\";\n\nexport type AccordionItemProps = {\n    id?: string;\n    title?: string;\n    children?: ReactNode;\n    defaultExpanded?: boolean;\n    expanded?: boolean;\n    onChange?: any;\n    expandIcon?: string; //don't usable currently because icon is also injected by CSS. Bug declared on dec. 8th.\n}\n\nconst AccordionItem = ({\n    id,\n    title = \"Item title\",\n    children,\n    defaultExpanded = false,\n    onChange,\n    expanded = defaultExpanded,\n    expandIcon = 'expand-more'\n}:AccordionItemProps) => {\n    const [maxH, setMaxH] = React.useState(0);\n    \n    const [isExpanded, setIsExpanded] = React.useState(expanded);\n    \n    const ref = useRef(null) as any;\n\n    const getContentHeight = () => {\n        if (ref && ref.current) {\n            return ref.current.querySelector('.mds-accordion__body').offsetHeight;\n        } else {\n            return 0\n        }\n    }\n\n    const onClickHandler = () => {\n        setIsExpanded(!isExpanded);\n\n        if (onChange && id) {\n            onChange(id);\n        }\n    }\n\n    useEffect(() => {\n        if (isExpanded) {\n            setMaxH(getContentHeight());\n        } else {\n            setMaxH(0);\n        }\n\n        return () => {}\n    }, [isExpanded]);\n\n\n    useEffect(() => {\n        setIsExpanded(expanded);\n        return () => {}\n    }, [expanded])\n\n    return (\n        <div ref={ref} id={id} className=\"mds-accordion__item\">\n            <h2 className=\"mds-accordion__header\">\n                <button type=\"button\" aria-controls=\"collapse--xx\" onClick={onClickHandler} className={`mds-collapse mds-collapse__label ${isExpanded ? 'active' : ''}`} aria-expanded={isExpanded}>\n                    {title}\n                    <span className={`mds-icon__${expandIcon}`} aria-hidden=\"true\"></span>\n                </button>\n            </h2>\n            <div id=\"collapse--xx\" className={`mds-collapse__content ${isExpanded ? 'active' : ''}`} style={{'maxHeight': maxH}}>\n                <div className=\"mds-accordion__body\">\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AccordionItem;","import React, {ReactNode} from \"react\";\n\n\ntype AlertProps = {\n    children?: ReactNode;\n    severity?: \"info\" | \"success\" | \"warning\" | \"danger\";\n    title?: string;\n    icon?: string;\n    onClose?: any;\n}\n\nexport default function Alert({\n    children,\n    severity = \"info\",\n    title,\n    icon = \"info\",\n    onClose\n}:AlertProps){\n    return (\n        <div className={`mds-alert mds-alert--basic mds-alert-type--${severity} mds-border-4--color-white`}>\n            <div className=\"mds-alert__header\">\n                <span className={`mds-icon mds-icon__${icon}`} aria-hidden=\"true\"></span>\n                { title ? (\n                    <h2 className=\"mds-sr-only\">{title}</h2>\n                ):( null )}\n            </div> \n            { onClose && \n                <button className=\"mds-close\" onClick={onClose}>\n                    <span className=\"mds-icon__close\" aria-hidden=\"true\"></span>\n                    <span className=\"mds-sr-only\">Fermer l'alerte</span>\n                </button>\n            }\n            \n            <div className=\"mds-alert__content\">\n                <p>{children}</p>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\n\nexport type BadgeProps = {\n    label?: string;\n    size?: \"small\" | \"big\";\n    severity?: \"neutral\" | \"success\" | \"warning\" | \"danger\" | \"new\";\n    color?: string; // override severity color\n    icon?: string;\n}\n\n\nexport default function Badge ({\n    label,\n    size = \"small\",\n    severity = \"neutral\",\n    icon,\n    color,\n}: BadgeProps) {\n\n    const colorClass = (color) ? `mds-background-color__${color}` : \"\";\n\n    return  (\n        <p className={`mds-badge mds-badge--${size} mds-badge--${severity} ${colorClass}`}>\n            {icon &&\n                <span className={`mds-icon__${icon}`} aria-hidden=\"true\"></span>\n            }\n            <span>{label}</span>\n        </p>\n    )\n}","import React, { HTMLProps } from \"react\";\n\nconst variantMappingClass = {\n    body1: 'mds-text--1',\n    body2: 'mds-text--2',\n    body3: 'mds-text--3',\n    body4: 'mds-text--4',\n}\n\nexport const LinkColorMappingClass = {\n    link   : \"color-use--9\",\n    primary: \"color-macif--1\",\n    text   : \"color-grey--80\",\n}\n\nexport interface LinkProps extends HTMLProps<HTMLAnchorElement> {\n    children? : string;\n    variant? : \"body1\" | \"body2\" | \"body3\" | \"body4\";\n    underline?: boolean;\n    reverse?: boolean;\n    startIcon?: string;\n    endIcon?: string;\n    color?: \"link\" | \"primary\" | \"text\";\n}\n\nconst Link = ({\n    children,\n    variant = 'body2',\n    underline = true,\n    reverse = false,\n    startIcon,\n    endIcon,\n    color = \"link\",\n    ...props\n}:LinkProps) => {\n    const classBuilder = `mds-link ${variantMappingClass[variant]} ${!underline ? \"mds-link--standalone\" : \"\"} ${reverse ? \"mds-link--reverse\" : \"mds-color__\"+LinkColorMappingClass[color] }`;\n\n    return (\n        <a className={classBuilder} {...props}>\n            {startIcon &&\n                <span className={`mds-icon__${startIcon}--right`} aria-hidden=\"true\"></span>\n            }\n            {children}\n            {endIcon &&\n                <span className={`mds-icon__${endIcon}--right`} aria-hidden=\"true\"></span>\n            }\n        </a>\n    )\n}\n\nexport default Link;","import React, {Children, ReactNode} from \"react\";\nimport { LinkColorMappingClass } from \"../Link/Link\";\n\nexport type BreadcrumbProps = {\n    children?: ReactNode;\n    color?: \"link\" | \"primary\" | \"text\";\n    reverse?: boolean;\n}\n\nconst Breadcrumb = ({\n    children,\n    color = \"link\",\n    reverse = false,\n}:BreadcrumbProps) => {\n    const colorClass = (reverse) ? \"color-white\" : LinkColorMappingClass[color];\n    return (\n        <nav className=\"mds-breadcrumbs\" role=\"navigation\" aria-labelledby=\"xx\">\n            <ul>\n                {Children.map(children, child => {\n                    return (<li className={`mds-color__${colorClass}`}>{child}</li>)\n                })}\n            </ul>\n        </nav>\n    )\n}\n\nexport default Breadcrumb;","import React, { ReactNode } from 'react';\n\n   \nexport interface ButtonProps extends React.ComponentPropsWithoutRef<\"button\"> {\n    component?: string;\n    children?: ReactNode;\n    color?: 'default' | 'conversion' | 'alert';\n    disabled?: boolean;\n    endIcon?: string;\n    size?: \"small\" | \"medium\";\n    fullWidth?: boolean;\n    href?: string;\n    reverse?: boolean;\n    startIcon?: string;\n    target?: string;\n    variant?: \"primary\" | \"secondary\" | \"tertiary\";\n}\n\nexport default function Button({\n    component,\n    children, \n    color,\n    variant = \"primary\",\n    size = \"medium\",\n    fullWidth = false,\n    startIcon,\n    endIcon,\n    disabled = false,\n    reverse = false,\n    href,\n    target,\n    \n    ...buttonProps\n}: ButtonProps){\n\n    const tagComponent = component || \"button\";\n    const Tag = tagComponent as \"a\" | \"div\";\n\n    const fullWidthClass = (fullWidth) ? \"mds-full-width\" : \"\";\n    const reverseClass = (reverse) ? \"mds-btn--reverse\" : \"\";\n    \n    if (variant == 'primary' && color == 'conversion') {\n        variant += \"-cta\";\n    } else if (variant == 'secondary' && color == 'alert') {\n        variant += \"-alert\";\n    }\n\n\n    let opts : any = {};\n        \n    if (Tag == \"a\") {\n        opts['role'] = \"button\";\n        opts['href'] = href;\n        opts['target'] = (target ? target : \"_self\");\n        opts['tabindex'] = \"0\";\n    } else if (Tag == \"div\") {\n        opts['role'] = \"button\";\n        opts['tabindex'] = \"0\";\n    } else {\n        opts = {...buttonProps, opts}; //if Tag == button : merge buttonProps\n    }\n    \n    if (disabled) {\n        if (Tag == \"a\" || Tag == \"div\"){\n            opts['aria-disabled'] = 'true';\n        }else{\n            opts['disabled'] = 'disabled';\n        }\n    }\n\n    return (\n        <Tag {...opts} \n            className={`mds-btn mds-btn--${variant} mds-btn--${size} ${fullWidthClass} ${reverseClass}`}>\n            \n            {startIcon ? (\n                <span className={`mds-icon__${startIcon}--left`} aria-hidden=\"true\"></span>\n            ) : (null)}\n            {children}\n            \n            {endIcon ? (\n                <span className={`mds-icon__${endIcon}--right`} aria-hidden=\"true\"></span>\n            ) : (null)}\n        </Tag>\n    )\n}","import React from 'react';\n\n\nexport type CardProps = {\n    title?: string;\n    icon?: string;\n    href?: string;\n    target?: string;\n    role?: string;\n}\n\nexport default function CardCompactV({\n    title = \"title\",\n    icon = \"auto\",\n    href = \"#\",\n    target = \"_self\",\n    role,\n}: CardProps){\n\n    return (\n        <div className=\"mds-card mds-card--compact-v\" role={role}>\n            <span className=\"mds-icon__arrow-forward\" aria-hidden=\"true\"></span>\n            <div className=\"mds-card__content\">\n                <p className=\"mds-card__title\">\n                    <a href={href} className=\"mds-card__link\" target={target}>{title}</a>\n                </p>\n            </div>\n            <span className={`mds-icon mds-picto__${icon}`} aria-hidden=\"true\"></span>\n        </div>\n    )\n}","import React from \"react\";\n\n\nexport type ChipsItemProps = {\n    label?: string;\n    active?: boolean;\n    onClick?: any\n}\n\nexport default function ChipsItem({\n    label,\n    active = false,\n    onClick\n}:ChipsItemProps) {\n    return (\n        <li>\n            <button onClick={onClick} type=\"button\" className=\"mds-chips__item\" aria-pressed={`${active}`} aria-disabled={`${active}`}>{label}</button>\n        </li>\n    )\n}","import React, { ReactNode } from \"react\"\n\ntype ChipsListProps = {\n    children?: ReactNode;\n    reverse?: boolean;\n    size?: \"small\" | \"big\";\n}\n\n\nexport default function ChipsList ({\n    children,\n    reverse = false,\n    size = \"big\"\n}:ChipsListProps) {\n    \n    return (\n        <div className={`mds-chips ${size == 'small' ? \"mds-chips--small\" : \"\"} ${reverse == true ? \"mds-chips--reverse\" : \"\"}`}>\n            <ul className=\"mds-chips__list\">\n                {children}\n            </ul>\n        </div>\n    )\n}","import React, { HTMLAttributes } from \"react\";\n\n\nexport interface DividerProps extends HTMLAttributes<HTMLElement> {\n    component?: 'hr' | 'div';\n    variant?: 'thin' | 'heavy';\n    reverse?: boolean;\n}\n\nconst variantMappingClass = {\n    thin  : 'basic',\n    heavy : 'module'\n}\n\n\nconst Divider = ({\n    component = 'hr',\n    variant = 'thin',\n    reverse = false,\n    ...props\n}:DividerProps) => {\n    const Tag = component;\n\n    return (\n        <Tag className={`mds-divider mds-divider--${variantMappingClass[variant]} ${reverse ? 'mds-divider--reverse': ''}`} aria-hidden=\"true\" {...props}/>\n    )\n}\n\nexport default Divider;","import React, { ReactNode } from \"react\";\n\nexport type HeroProps = {\n    upTitle?: ReactNode;\n    title: ReactNode;\n    subTitle?: ReactNode;\n    heroActions?: ReactNode;\n    image?: string;\n}\n\n\nconst Hero = ({\n    upTitle,\n    title = \"Title\",\n    subTitle = \"Content\",\n    heroActions,\n    image\n}:HeroProps) => {\n\n    \n    return (\n        <div className=\"mds-hero mds-hero--action\">\n            <div className=\"mds-hero__body\">\n                {title}\n                {upTitle &&\n                    <div className=\"mds-supertitle\">\n                        {upTitle}\n                    </div>\n                }\n                { subTitle && \n                    <p className=\"mds-lead\">\n                        {subTitle}\n                    </p>\n                }\n                {heroActions && \n                    <div style={{order: 3}}>\n                        {heroActions}\n                    </div>\n                }\n            </div>\n            <div className=\"mds-hero__img\">\n                <img src={`${image}`} alt=\"\"/>\n            </div>\n        </div>\n    )\n};\n\nexport default Hero;","import React, { ReactNode } from \"react\";\n\nconst iconSizeMappingClass = {\n    'xsmall'   : 16,\n    'small'    : 24,\n    'medium'   : 28,\n    'large'    : 32,\n    'xlarge'   : 40,\n    'huge'     : 40,\n    'enormous' : 40,\n    'giant'    : 40,\n};\nconst pictoSizeMappingClass = {\n    'xsmall'   : 24,\n    'small'    : 32,\n    'medium'   : 40,\n    'large'    : 48,\n    'xlarge'   : 64,\n    'huge'     : 80,\n    'enormous' : 96,\n    'giant'    : 160,\n};\n\n\nexport type IconProps = {\n    children?: ReactNode;\n    color?: string;\n    size?: 'xsmall' | 'small' | 'medium'| 'large' | 'xlarge' | 'huge' | 'enormous' | 'giant' ;\n    baseClassName?: string;\n}\n\nconst Icon = ({\n    children = \"person\",\n    color,\n    size = 'medium',\n    baseClassName = \"icon\"\n}:IconProps) => {\n    const baseClass = \"mds-\" + baseClassName + \"__\";\n    const sizeClass = (baseClassName == 'picto') ? \"mds-picto--\"+pictoSizeMappingClass[size] : \"mds-icon--\"+iconSizeMappingClass[size];\n    return (\n        <span className={` ${baseClass}${children} ${sizeClass} ${color ?  \"mds-color__\"+color : ''} `}></span>\n    )\n}\n\nexport default Icon;","import React from \"react\";\n\n\nconst Play = ({}) => {\n    return (\n        <p>\n            Play\n        </p>\n    )\n}\n\nexport default Play;","/**\n * Because title is not required in ths version, aria-labeledby is not set\n * That's because aria-labeledby reference the title id ... and title id is not required CQFD\n * aria-labelledby=\"xxx\"\n */\nimport React, { ReactNode, useEffect, useRef } from \"react\";\n\nexport type SidePanelProps = {\n    children?: ReactNode;\n    open?: boolean;\n    onClose?: any;\n    size?: 'small' | 'medium' | 'large';\n    showCloseButton?: boolean;\n};\n\nconst sizeMappingClass = {\n    'small' : 'small',\n    'medium': 'medium',\n    'large' : 'big'\n}\n\n\nconst SidePanel = ({\n    children,\n    open = false,\n    onClose,\n    size = 'medium',\n    showCloseButton = false,\n}:SidePanelProps) => {\n    const ref = useRef(null) as any;\n\n    let $closeBtn:HTMLButtonElement;\n    \n    const closeHandler = () => {\n        if (onClose) { \n            onClose();\n        }\n    }\n\n    const escapeKeyHandler = (e:KeyboardEvent) => {\n        if (e.key === \"Escape\") {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            closeHandler();\n        }\n    }\n\n    const backdropClickHandler = (e:MouseEvent) => {\n        const el:any = e.target;\n        if(el.classList.contains('mds-dialog')){\n            closeHandler();\n        }\n    }\n\n    useEffect(() => {    \n        // mount\n        if (showCloseButton){\n            $closeBtn = ref.current.querySelector('button.mds-close');\n            $closeBtn.addEventListener(\"click\", closeHandler);\n        }\n\n        ref.current.addEventListener('click', backdropClickHandler);\n        \n        return () => {\n            // unmount\n            if (showCloseButton){\n                $closeBtn.removeEventListener(\"click\", closeHandler);\n            }\n\n            ref.current.removeEventListener('click', backdropClickHandler);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (open === true) {\n            document.addEventListener('keydown', escapeKeyHandler);\n            ref.current.showModal();\n        } else {\n            ref.current.close();\n        }\n\n        return () => {\n            document.removeEventListener('keydown', escapeKeyHandler);\n        }\n    }, [open]);\n\n    return (\n        <dialog ref={ref} role=\"dialog\" id=\"mds-modal\" className=\"mds-dialog\" aria-modal=\"true\">\n            <div className={`mds-modal mds-modal--side-panel mds-modal--${ sizeMappingClass[size]}`} role=\"document\">\n                \n                {showCloseButton && \n                    <button className=\"mds-close\">\n                        <span className=\"mds-icon__close\" aria-hidden=\"true\"></span>\n                        <span className=\"mds-sr-only\">Fermer la fenêtre de la modale</span>\n                    </button>\n                }\n\n                <div className=\"mds-modal__container\">\n                    {children}\n                </div>\n            </div>\n        </dialog>\n    )\n}\n\nexport default SidePanel;","import React from \"react\";\n\nexport type SidePanelHeaderProps = {\n    title? : string;\n    icon?: string;\n}\n\nconst SidePanelHeader = ({\n    title,\n    icon\n}:SidePanelHeaderProps) => {\n    return (\n        <>\n            <div className=\"mds-modal__header\">\n                {icon && \n                    <span aria-hidden=\"true\" className={`mds-icon__${icon}--left`}></span>\n                }\n                <h1 className=\"mds-modal__title\">{title}</h1>\n            </div>\n            <hr className=\"mds-divider mds-divider--small\" />\n        </>\n    )\n}\n\nexport default SidePanelHeader;","import React, { ReactNode } from \"react\";\n\nexport type SidePanelContentProps = {\n    children?: ReactNode;\n}\n\nconst SidePanelContent = ({\n    children\n}:SidePanelContentProps) => {\n    return (\n        <div className=\"mds-modal__content\">\n            {children}\n        </div>\n    )\n}\n\nexport default SidePanelContent;","import React, { ReactNode } from \"react\";\n\nexport type SidePanelFooterProps = {\n    children? : ReactNode;\n}\n\nconst SidePanelFooter = ({\n    children\n}:SidePanelFooterProps) => {\n    return (\n        <div className=\"mds-modal__footer\">\n            {children}\n        </div>\n    )\n}\n\nexport default SidePanelFooter;","import React, { HTMLAttributes, ReactNode } from \"react\"\n\nconst variantMappingClass = {\n    h1: 'mds-h1',\n    h2: 'mds-h2',\n    h3: 'mds-h3',\n    h4: 'mds-h4',\n    h5: 'mds-h5',\n    h6: 'mds-h6',\n    body1: 'mds-text--1',\n    body2: 'mds-text--2',\n    body3: 'mds-text--3',\n    body4: 'mds-text--4',\n    underline: 'mds-underline',\n  };\n\n  const variantMappingTag = {\n    h1: 'h1',\n    h2: 'h2',\n    h3: 'h3',\n    h4: 'h4',\n    h5: 'h5',\n    h6: 'h6',\n    body1: 'p',\n    body2: 'p',\n    body3: 'p',\n    body4: 'p',\n    underline: 'span',\n  }\n\nexport interface typographyProps extends HTMLAttributes<HTMLElement> {\n    children?: ReactNode;\n    variant? : \"body1\" | \"body2\" | \"body3\" | \"body4\" | \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"underline\" ;\n    component?: string;\n    align?: \"center\" | \"inherit\" | \"justify\" | \"left\" | \"right\";\n    underlineColor?: string;\n    framed?: boolean;\n}\n\nexport default function Typography({\n    children, \n    variant = \"body1\",\n    component,\n    align = \"left\",\n    underlineColor = '',\n    framed = false,\n    ...props\n}:typographyProps) {\n   \n    const tagComponent = component || variantMappingTag[variant];\n    const Tag = tagComponent as \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"p\" | \"div\" | \"span\";\n    const variantClass = (variant == \"underline\" && underlineColor) ? variantMappingClass[variant] + '--' + underlineColor : variantMappingClass[variant];\n\n    return (\n        <Tag className={`${variantClass} ${framed ? \"mds-framed\" : \"\"}`} style={{textAlign: align}} {...props}>\n            {framed ? (\n                <span>{children}</span>\n            ):(\n                children\n            )}\n        </Tag>\n    )\n}","/**\n * on this version, the active class, to show which section is displayed, is not supported\n * I don't know how to pass the class name to child component\n * <li><a className=\"active\" href=\"#section1\">Blablabla</a></li>\n */\nimport React, { Children, ReactNode } from \"react\";\nimport { Typography } from \"../Typography\";\n\ntype SummaryProps = {\n    children?: ReactNode;\n    title?: string;\n}\n\nconst Summary = ({\n    children,\n    title = \"Summary\",\n}:SummaryProps) => {\n\n    const ariaId = React.useId();\n\n    return (\n        <nav className=\"mds-summary\" role=\"navigation\" aria-labelledby={ariaId}>\n            <Typography variant=\"h4\" component=\"p\" role=\"heading\" aria-level={2} id={ariaId}>{title}</Typography>\n            <ul className=\"mds-list\">\n                {Children.map(children, child => {\n                    return <li>{child}</li>\n                })}\n            </ul>\n        </nav>\n    )\n}\n\nexport default Summary;"],"names":["Accordion","children","React","AccordionItem","id","title","defaultExpanded","onChange","expanded","expandIcon","maxH","setMaxH","isExpanded","setIsExpanded","ref","useRef","getContentHeight","onClickHandler","useEffect","Alert","severity","icon","onClose","Badge","label","size","color","colorClass","variantMappingClass","LinkColorMappingClass","Link","variant","underline","reverse","startIcon","endIcon","props","classBuilder","Breadcrumb","Children","child","Button","component","fullWidth","disabled","href","target","buttonProps","Tag","fullWidthClass","reverseClass","opts","CardCompactV","role","ChipsItem","active","onClick","ChipsList","Divider","Hero","upTitle","subTitle","heroActions","image","iconSizeMappingClass","pictoSizeMappingClass","Icon","baseClassName","baseClass","sizeClass","Play","sizeMappingClass","SidePanel","open","showCloseButton","$closeBtn","closeHandler","escapeKeyHandler","e","backdropClickHandler","SidePanelHeader","SidePanelContent","SidePanelFooter","variantMappingTag","Typography","align","underlineColor","framed","variantClass","Summary","ariaId"],"mappings":"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"}